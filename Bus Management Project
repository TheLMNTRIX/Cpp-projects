#include<iostream>
#include<conio.h>
#include<string.h>
#include<cstdio>
#include<cstdlib>
using namespace std;

static int p = 0;
class bsm                        //Starting Class
{
	char busn[5], driver[10], arrival[5], depart[5], from[10], to[10], seat[8][4][10];
public:
	void install();
	void allotment();
	void empty();
	void show();
	void avail();
	void position(int i);

}
bus[10];

void vline(char ch)
{
	for (int i = 80; i > 0; i--)
	{
		cout << ch;

	}

}
void bsm::install()                                             //Function to store Bus details
{
	cout << "Enter bus no: ";
	cin >> bus[p].busn;
	cout << endl << "Enter driver name: ";
	cin >> bus[p].driver;
	cout << "\nEnter arrival time: ";
	cin >> bus[p].arrival;
	cout << "\nEnter departure time: ";
	cin >> bus[p].depart;
	cout << "\nFrom: \t\t\t";
	cin >> bus[p].from;
	cout << "\n To: \t\t\t";
	cin >> bus[p].to;
	bus[p].empty();
	p++;
}

void bsm::allotment()                               //To allot seats
{
	int seat;
	char number[5];
top:
	cout << "Bus no: ";
	cin >> number;
	int n;
	for (n = 0; n <= p; n++)
	{
		if (strcmp(bus[n].busn, number) == 0)
			break;

	}
	while (n <= p)
	{
		cout << "\nSeat Number: ";
		cin >> seat;
		if (seat > 32)
		{
			cout << "\nThere are only 32 seats available on this bus";

		}
		else
		{
			if (strcmp(bus[n].seat[seat / 4][(seat) % 4 - 1], "Empty") == 0)
			{
				cout << "Enter Passengers name: ";
				cin >> bus[n].seat[seat / 4][(seat) % 4 - 1];
				break;

			}
			else
				cout << "Seat is already reserved.\n";
		}
	}
	if (n > p)
	{
		cout << "Enter correct bus no. \n";
		goto top;

	}

}

void bsm::empty()                          //For empty seats
{
	for (int i = 0; i < 8, i++;)
	{
		for (int j = 0; j < 4; j++)
		{
			strcpy(bus[p].seat[i][j], "Empty");

		}

	}
}
void bsm::show()                          //To display details
{
	int n;
	char number[5];
	cout << "Enter bus no: ";
	cin >> number;
	for (n = 0; n <= p; n++)
	{
		if (strcmp(bus[n].busn, number) == 0)
			break;

	}
	while (n <= p)
	{
		vline('*');
		cout << "Bus no: \t" << bus[n].busn << "\nDriver: \t" << bus[n].driver
			<< "\t\tArrival time: \t" << bus[n].arrival << "\tDeparture time:" << bus[n].depart
			<< "\nFrom: \t\t" << bus[n].from << "\t\tTo: \t\t" << bus[n].to << endl;
		vline('*');
		bus[0].position(n);
		int a = 1;
		for (int i = 0; i < 8; i++)
		{
			for (int j = 0; j < 4; j++)
			{
				a++;
				if (strcmp(bus[n].seat[i][j], "Empty") != 0)
					cout << "\nThe seat no" << (a - 1) << " is reserverd for" << bus[n].seat[i][j] << ".";

			}
		}
		break;

	}
	if (n > p)
	{
		cout << "Enter the correct bus no: ";
	}
}
void bsm::position(int l)                                        //Position of bus out of 10
{
	int s = 0, p = 0;
	for (int i = 0; i < 8; i++)
	{
		cout << endl;
		for (int j = 0; j < 4;j++)
		{
			s++;
			if (strcmp(bus[l].seat[i][j], "Empty") == 0)
			{
				cout.width(5);
				cout.fill(' ');
				cout << s << ".";
				cout.width(10);
				cout.fill(' ');
				cout << bus[l].seat[i][j];
				p++;

			}
			else
			{
				cout.width(5);
				cout.fill(' ');
				cout << s << ".";
				cout.width(10);
				cout.fill(' ');
				cout << bus[l].seat[i][j];
				

			}



		}
	}
	cout << "\n\nThere are " << p << "seats empty in Bus no: " << bus[l].busn;
}
void bsm::avail()                                                  //Availablity of buses
{
	for (int n = 0; n < p; n++)
	{
		vline('*');
		cout<<"Bus no : \t" << bus[n].busn << "\nDriver: \t" << bus[n].driver
			<< "\t\tArrival time: \t" << bus[n].arrival << "\tDeparture time:" << bus[n].depart
			<< "\nFrom: \t\t" << bus[n].from << "\t\tTo: \t\t" << bus[n].to << endl; ;
		vline('*');
		vline('_');
	}
}
int main()                                  //Main Function
{
	system("cls");
	int choice;
	while (1)
	{
		cout << "\n\n\n\n\n";
		cout << "\t\t\t1.Install.\n\t\t\t"
			<< "2.Reservation.\n\t\t\t"
			<< "3.Show.\n\t\t\t"
			<< "4.Buses Available. \n\t\t\t"
			<< "5.Exit.";
		cout << "\nEnter your choice: ";
		cin >> choice;
		switch (choice)
		{
		case 1: bus[p].install();
			break;
		case 2:bus[p].allotment();
			break;
		case 3:bus[0].show();
			break;
		case 4:bus[0].avail();
			break;
		case 5:exit(0);
			break;
		default:
			cout<<"invalid choice";
		}
	}
	return 0;
}                                         //End of program


